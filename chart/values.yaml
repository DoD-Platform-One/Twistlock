# -- domain to use for virtual service
domain: bigbang.dev

monitoring:
  # -- Toggle monitoring integration, only used if init job is enabled,
  # creates required metrics user, serviceMonitor, networkPolicy, etc
  enabled: false
  serviceMonitor:
    scheme: ""
    tlsConfig: {}

# -- Configuration of Twistlock's SAML SSO capability.  This requires `init.enabled`=`true`, valid credentials, and a valid license. Refer to docs/KEYCLOAK.md for additional information.
sso:
  # -- Toggle SAML SSO
  enabled: false

  # -- SAML client ID
  client_id: ""

  # -- SAML Povider Alias (optional)
  provider_name: ""

  # -- SAML Identity Provider. `shibboleth` is recommended by Twistlock support for Keycloak
  provider_type: "shibboleth"

  # -- Identity Provider url with path to realm, example: https://keycloak.bigbang.dev/auth/realms/baby-yoda
  issuer_uri: ""

  # -- SAML Identity Provider SSO URL, example: https://keycloak.bigbang.dev/auth/realms/baby-yoda/protocol/saml"
  idp_url: ""

  # -- Console URL of the Twistlock app. Example: `https://twistlock.bigbang.dev` (optional)
  console_url: ""

  # -- Groups attribute (optional)
  groups: ""

  # -- X.509 Certificate from Identity Provider (i.e. Keycloak). See docs/KEYCLOAK.md for format. Use the `|-` syntax for multiline string
  cert: ""

istio:
  # -- Toggle istio integration
  enabled: false
  # -- Default twistlock peer authentication
  mtls:
    # -- STRICT = Allow only mutual TLS traffic,
    # PERMISSIVE = Allow both plain text and mutual TLS traffic
    mode: STRICT
  console:
    # -- Toggle vs creation
    enabled: true
    # -- Annotations for VS
    annotations: {}
    # -- Labels for VS
    labels: {}
    # -- Gateways for VS
    gateways:
      - istio-system/main
    # -- Hosts for VS
    hosts:
      - twistlock.{{ .Values.domain }}

networkPolicies:
  # -- Toggle network policies
  enabled: false
  # -- Labels for ingress pods to allow traffic
  ingressLabels:
    app: istio-ingressgateway
    istio: ingressgateway
  # -- Control Plane CIDR to allow init job communication to the Kubernetes API.  Use `kubectl get endpoints kubernetes` to get the CIDR range needed for your cluster
  controlPlaneCidr: 0.0.0.0/0
  # -- Node CIDR to allow defender to communicate with console.  Defaults to allowing "10.0.0.0/8" "172.16.0.0/12" "192.168.0.0/16" "100.64.0.0/10" networks.
  # use `kubectl get nodes -owide` and review the `INTERNAL-IP` column to derive CIDR range.
  # Must be an IP CIDR range (x.x.x.x/x - ideally a /16 or /24 to include multiple IPs)
  nodeCidr: null

# -- Defines the secrets to use when pulling the container images
# NOTE: Only first entry in the list will be used for Defender deployment
imagePullSecrets: []

# -- Run Twistlock Console and Defender with a dedicated SELinux label. See https://docs.docker.com/engine/reference/run/#security-configuration
selinuxLabel: disable

# -- systemd configuration
systemd:
  # -- option to install Twistlock as systemd service. true or false
  enabled: false

console:
  # -- Enables or Disables data recovery. Values: true or false.
  dataRecovery: true
  image:
    # -- Full image name for console
    repository: registry1.dso.mil/ironbank/twistlock/console/console
    # -- Full image tag for console
    tag: 22.12.415
    # -- Pull policy for console image
    imagePullPolicy: IfNotPresent
  ports:
    # -- Enables the management HTTP listener.
    managementHttp: 8081
    # -- Enables the management HTTPS listener.
    managementHttps: 8083
    # -- Sets the port for communication between the Defender(s) and the Console
    communication: 8084
  # -- Sets the container security context for the console
  securityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 2674
    runAsGroup: 2674
    capabilities:
      drop:
        - ALL
  persistence:
    # -- Size of Twistlock PVC
    size: 100Gi
    # -- Access mode for Twistlock PVC
    accessMode: ReadWriteOnce

  # -- Enable syslog audit feature
  # When integrating with BigBang, make sure to include an exception to Gatekeeper and/or Kyverno for Volume Types.
  syslogAuditIntegration:
    enabled: false

  # -- Controls console container's resource constraints. Set to "true" to run without limits.
  # See https://docs.docker.com/engine/reference/run/#runtime-constraints-on-resources
  disableCgroupLimits: false

  # -- The license key to use.  If not specified, the license must be installed manually.
  license: ""

  # -- Run Twistlock Console processes as root (default false, twistlock user account). Values: true or false
  runAsRoot: false

  # -- Required if init is enabled.  Admin account to use for configuration through API.  Will create account if Twistlock is a new install.  Otherwise, an existing account needs to be provided.
  credentials:
    # -- Username of account
    username: "admin"
    # -- Password of account
    password: "change_this_password"

  # -- Additional users to setup.  This requires `init.enabled`=`true`, valid credentials, and a valid license.
  additionalUsers: []
  # - # -- Username for the additional user (required)
  #   username: ""
  #   # -- Password if the user's authType is basic (a local user).  Password will never be updated if the user already exists.
  #   password: ""
  #   # -- Role based permissions for the user (required).  Valid values include 'admin', 'operator', 'auditor', 'devSecOps', 'vulnerabilityManager', 'devOps', 'defenderManager', 'user', and 'ci'.  See https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-reference-architecture-compute/rbac/access_twistlock.
  #   role: ""
  #   # -- Auth type for the user (default is 'basic').  Valid values include 'basic', 'ldap', 'oauth', 'oidc', or 'saml'.
  #   authType: ""
  # -- Toggles whether to update the `additionalUsers` if the user is already created (e.g. on upgrades).  This would overwrite the existing user configuration.
  updateUsers: false

  options:
    # -- Toggle setting all options in this section
    enabled: true
    # -- Network monitoring options
    network:
      # -- Toggle network monitoring of containers
      container: true
      # -- Toggle network monitoring of hosts
      host: true
    # -- Toggle logging Prisma Cloud events to standard output
    logging: true
    # -- Toggle sending product usage data to Palo Alto Networks
    telemetry: false
    # NOTE: Prometheus metrics instrumentation is controlled by .monitoring.enabled
  
  # -- This value should be enabled when upgrading from a version <=0.10.0-bb.1 in order to allow the console to run as non-root
  volumeUpgrade: true

  # -- Trusted images settings
  trustedImages:
    # -- Toggle deployment and updating of trusted image settings
    enabled: true
    # -- List of regex matches for images to trust
    registryMatches:
      - "registry1.dso.mil/ironbank/*"
    # -- Name for the group/rule to display in console
    name: "BigBang-Trusted"
    # -- Effect for images that do not match the trusted registry, can be "alert" or "block"
    defaultEffect: "alert"

# -- Configuration of Twistlock's container defenders.  This requires `init.enabled`=`true`, valid credentials, and a valid license.
defender:
  enabled: true
  # -- Image for Twistlock defender.  Leave blank to use twistlock official repo.
  image:
    # -- Repository and path for defender image
    repository: registry1.dso.mil/ironbank/twistlock/defender/defender
    # -- Image tag for defender
    tag: 22.12.415
  # This value should not be modified unless instructed to by Twistlock Support
  certCn: ""
  # -- Name of cluster
  clusterName: ""
  # -- Collect Deployment and Namespace labels
  collectLabels: true
  # -- Use Container Runtime Interface (CRI) instead of Docker
  cri: true
  # -- Path to Docker socket.  Leave blank to use /var/run/docker.sock
  dockerSocket: ""

  # -- List of tolerations to be added to the Defender DaemonSet retrieved during the init script
  tolerations: []
  # -- Sets the container security context dropped capabilities for the defenders
  securityCapabilitiesDrop:
    - ALL
  
  # -- Sets the type of the Docker listener (TCP or NONE)
  dockerListenerType: ""

  # -- Monitor service accounts
  monitorServiceAccounts: true
  # -- Run as privileged.  If `selinux` is `true`, this automatically gets set to `false`
  privileged: false
  # -- Proxy settings
  proxy: {}
    # address: "" # Address and port of the proxy
    # ca: "" # CA certificate to trust (optional)
    # username: "" # Proxy username (optional)
    # password: "" # Proxy password (optional)

  # -- Deploy with SELinux Policy
  selinux: true

  # -- Assign globally unique names to hosts
  uniqueHostName: false

# -- Configures defender policies.  This requires `init.enabled`=`true`, valid credentials, and a valid license.
policies:
  # -- Toggles configuration of defender policies
  enabled: true
  # -- Name to use as prefix to policy rules.
  # NOTE: If you change the name after the initial deployment, you may end up with duplicate policy sets and need to manually cleanup old policies.
  name: Default

  # -- Vulnerability policies
  vulnerabilities:
    # -- Toggle deployment and updating of vulnerability policies
    enabled: true
    # -- The minimum severity to alert on
    alertThreshold: medium

  # -- Compliance policies
  compliance:
    # -- Toggle deployment and updating of compliance policies
    enabled: true
    # -- The policy templates to use.  Valid values are 'GDPR', 'DISA STIG', 'PCI', 'NIST SP 800-190', or 'HIPAA'
    templates:
      # - GDPR
      - DISA STIG
      # - PCI
      - NIST SP 800-190
    # - HIPAA
    # -- If template does not apply, set policy to alert using this severity or higher.  Valid values are 'low', 'medium', 'high', or 'critical'.
    alertThreshold: medium

  # -- Runtime policies
  runtime:
    # -- Toggle deployment and updating of runtime policies
    enabled: true

# -- Initialization job.  Sets up users, license, container defenders, default policies, and other settings.
init:
  # -- Toggles the initialization on or off
  enabled: true
  # -- Initialization job image configuration
  image:
    # -- Repository and path to initialization image.  Image must contain `jq` and `kubectl`
    repository: registry1.dso.mil/ironbank/big-bang/base
    # -- Initialization image tag
    tag: 2.0.0
    # -- Initialization image pull policy
    imagePullPolicy: IfNotPresent
  # -- Configure Resources of the init Job -- #
  resources:
    limits:
      cpu: 0.5
      memory: 128Mi
    requests:
      cpu: 0.5
      memory: 128Mi

# -- affinity for console pod
affinity: {}
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     - topologyKey: "kubernetes.io/hostname"
  #       labelSelector:
  #         matchLabels:
  #           dont-schedule-with: twistlock"
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: node-type
  #         operator: In
  #         values:
  #         - "twistlock"

# -- nodeSelector for console pod
nodeSelector: {}
  # node-type: twistlock"

# -- tolerations for console pod
tolerations: []
  # - key: "key1"
  #   operator: "Equal"
  #   value: "value1"
  #   effect: "NoSchedule"

# -- annotations for console pod
annotations: {}
  # bigbang.dev/istioVersion: 1.10.3

# -- resources for console pod
resources:
  limits:
    memory: 2Gi
    cpu: 250m
  requests:
    memory: 2Gi
    cpu: 250m

# -- Toggle to setup special configuration for OpenShift clusters
openshift: false

bbtests:
  # -- Toggle bbtests on/off for CI/Dev
  enabled: false
  cypress:
    # -- Toggle creation of cypress artifacts
    artifacts: true
    # -- Set envs for use in cypress tests
    envs:
      cypress_baseUrl: "http://{{ .Release.Name }}-console.{{ .Release.Namespace }}.svc.cluster.local:8081"
  scripts:
    # -- Image to use for script tests
    image: registry1.dso.mil/ironbank/stedolan/jq:1.6
    # -- Set envs for use in script tests
    envs:
      twistlock_host: "https://{{ .Release.Name }}-console.{{ .Release.Namespace }}.svc.cluster.local:8083"
      desired_version: "{{ .Values.console.image.tag }}"
